// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ApiRestBancoTest.Data;

#nullable disable

namespace ApiRestBancoTest.Migrations
{
    [DbContext(typeof(BancoBDDContext))]
    [Migration("20241008033810_MigracionV2")]
    partial class MigracionV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiRestBancoTest.Models.Cliente", b =>
                {
                    b.Property<int>("intClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intClienteId"), 1L, 1);

                    b.Property<bool>("blEstado")
                        .HasColumnType("bit");

                    b.Property<int>("intContraseña")
                        .HasColumnType("int");

                    b.Property<int>("intEdad")
                        .HasColumnType("int");

                    b.Property<int>("intIdentificacion")
                        .HasColumnType("int");

                    b.Property<int>("intelefono")
                        .HasColumnType("int");

                    b.Property<string>("strDireccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strGenero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("strNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("ApiRestBancoTest.Models.Cuenta", b =>
                {
                    b.Property<int>("intCuentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intCuentaId"), 1L, 1);

                    b.Property<bool>("blEstadoCuenta")
                        .HasColumnType("bit");

                    b.Property<int>("intNumeroCuenta")
                        .HasColumnType("int");

                    b.Property<int>("intSaldoInicial")
                        .HasColumnType("int");

                    b.Property<string>("strTipoCuenta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intCuentaId");

                    b.ToTable("Cuentas");
                });

            modelBuilder.Entity("ApiRestBancoTest.Models.Movimiento", b =>
                {
                    b.Property<int>("intMovimientoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("intMovimientoId"), 1L, 1);

                    b.Property<DateTime>("dtimeFecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("intSaldo")
                        .HasColumnType("int");

                    b.Property<int>("intValor")
                        .HasColumnType("int");

                    b.Property<string>("strTipoMovimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("intMovimientoId");

                    b.ToTable("Movimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
